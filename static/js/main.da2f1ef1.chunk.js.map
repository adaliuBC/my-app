{"version":3,"sources":["components/Message.jsx","components/MessageList.jsx","components/OnlineUserList.jsx","components/DialogInput.jsx","components/LoginPage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Message","className","this","props","username","text","Component","MessageList","node","ReactDOM","findDOMNode","scrollTop","scrollHeight","msgList","map","message","index","OnlineUserList","usrList","user","DialogInput","state","dialog","handleChange","bind","handleSubmit","event","setState","target","value","preventDefault","console","log","sendDialog","onSubmit","onChange","placeholder","type","LoginPage","password","handleUser","handlePass","sendUserPass","url","App","a","update_msgToken","form","FormData","append","headers","msgToken","axios","post","response","status","alert","update_strmToken","URLSearchParams","data","strmToken","showChat","start_stream","document","title","stream","EventSource","addEventListener","close","Array","JSON","parse","usr","push","JoinMsg","created","MsgMsg","filter","item","PartMsg","StatusMsg","users","display","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.da2f1ef1.chunk.js","sourcesContent":["//import React from 'react'\r\nimport { Component } from \"react\";\r\n\r\nclass Message extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"message\">\r\n                <div className=\"message-user\">{this.props.username}</div>\r\n                <div className=\"message-text\">{this.props.text}</div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message","//import React from 'react'\r\nimport { Component } from \"react\";\r\nimport ReactDOM from 'react-dom'\r\nimport Message from \"./Message\";\r\n\r\nclass MessageList extends Component {\r\n\r\n    // auto-rollup when new messages come in\r\n    // need to test\r\n    componentDidUpdate() {\r\n        const node = ReactDOM.findDOMNode(this)\r\n        node.scrollTop = node.scrollHeight\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"message-list\">\r\n                {/* change index with messageToken?? */}\r\n                {this.props.msgList.map((message, index) => {\r\n                    return (\r\n                        <Message key={index} username={message.username} text={message.text} />\r\n                        \r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageList","//import React from 'react'\r\nimport { Component } from \"react\";\r\n\r\nclass OnlineUserList extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"online-users\">\r\n                <h2>Online users</h2>\r\n                {this.props.usrList.map((user, index) => {\r\n                    return (\r\n                        <div key={index} className=\"user\">\r\n                            <div>{user}</div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OnlineUserList","import { Component } from \"react\";\r\n\r\nclass DialogInput extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dialog: '',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            dialog: event.target.value,\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        console.log(\"current dialog box\", this.state.dialog)\r\n        // TODO: send dialog to App.js to backend\r\n        this.props.sendDialog(this.state.dialog)\r\n        this.setState({\r\n            dialog: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form   onSubmit={this.handleSubmit} \r\n                    className=\"dialog-input-form\">\r\n                <input\r\n                    onChange={this.handleChange}\r\n                    value={this.state.dialog}\r\n                    placeholder=\"Type your message here and hit ENTER\"\r\n                    type=\"text\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DialogInput","import { Component } from \"react\";\r\n\r\nclass LoginPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n        }\r\n        this.handleUser = this.handleUser.bind(this);\r\n        this.handlePass = this.handlePass.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleUser(event) {\r\n        this.setState({\r\n            username: event.target.value,\r\n        })\r\n    }\r\n\r\n    handlePass(event) {\r\n        this.setState({\r\n            password: event.target.value,\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        // TODO: send user-pass to App.js to backend\r\n        this.props.sendUserPass(this.state.username, this.state.password)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-form\">\r\n                <h1>Login</h1>\r\n                <form   \r\n                    onSubmit={this.handleSubmit} \r\n                    className=\"login-input-form\">\r\n                    <label>Username:</label>\r\n                    <input\r\n                        onChange={this.handleUser}\r\n                        value={this.state.username}\r\n                        type=\"text\" />\r\n                </form>\r\n                <form   \r\n                    onSubmit={this.handleSubmit} \r\n                    className=\"login-input-form\">\r\n                    <label>Password:</label>\r\n                    <input\r\n                        onChange={this.handlePass}\r\n                        value={this.state.password}\r\n                        type=\"text\" />\r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginPage","//import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport \"./App.css\";\r\n\r\nimport MessageList from \"./components/MessageList\";\r\nimport OnlineUserList from \"./components/OnlineUserList\";\r\nimport DialogInput from \"./components/DialogInput\";\r\nimport LoginPage from \"./components/LoginPage\";\r\n\r\nvar url = \"https://localhost:3001\"\r\n//var url = \"https://chat.cs291.com\"\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      msgList: [],\r\n      // msgList: DUMMY_DATA_msg,\r\n      // usrList: DUMMY_DATA_usr,\r\n      usrList: [],\r\n      msgToken: \"\",\r\n      strmToken: \"\",\r\n      showChat: false\r\n    }\r\n    this.sendDialog = this.sendDialog.bind(this);\r\n    this.sendUserPass = this.sendUserPass.bind(this);\r\n    this.start_stream = this.start_stream.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    document.title = \"CS291a Chat Client\"\r\n  }\r\n\r\n  start_stream () {\r\n      var stream = new EventSource(url + \"/stream/\" + this.state.strmToken);\r\n      stream.addEventListener(\r\n          \"Disconnect\",\r\n          (event) => {\r\n              //TODO:\r\n              //close the stream\r\n              //show the login part\r\n              stream.close();\r\n              var usrList = Array();\r\n              var msgList = Array();\r\n              this.setState({showChat: false});\r\n              this.setState({usrList: usrList});\r\n              this.setState({msgList: msgList});\r\n          }\r\n      );\r\n      stream.addEventListener(\r\n          \"Join\",\r\n          (event) => {\r\n              //update the onlineUser window\r\n              //update the Msg window\r\n              var usrList = this.state.usrList;\r\n              var msgList = this.state.msgList;\r\n              var data = JSON.parse(event.data);\r\n              var usr = data.user;\r\n              usrList.push(usr);\r\n              var JoinMsg = \"JOINED on \" + data.created + usr;\r\n              msgList.push({'username': usr, 'text': JoinMsg});\r\n              this.setState({usrList: usrList});\r\n              this.setState({msgList: msgList});  //TODO: set state in one???\r\n          }\r\n      )\r\n      stream.addEventListener(\r\n          \"Message\",\r\n          (event) => {\r\n              //TODO:\r\n              //update the msg window\r\n              var msgList = this.state.msgList;\r\n              var data = JSON.parse(event.data);\r\n              var usr = data.user;\r\n              var MsgMsg = \"SEND MESSAGE on \" + data.created + \": \" + data.message;\r\n              msgList.push({'username': usr, 'text': MsgMsg});\r\n              this.setState({msgList: msgList});\r\n          }\r\n      )\r\n      stream.addEventListener(\r\n          \"Part\",\r\n          (event) => {\r\n              //TODO:\r\n              //update the msgList state msg window\r\n              //update the online user window\r\n              var usrList = this.state.usrList;\r\n              var msgList = this.state.msgList;\r\n              var data = JSON.parse(event.data);\r\n              var usr = data.user;\r\n              usrList = usrList.filter(item => item!==usr);\r\n              var PartMsg = \"DEPARTED on \" + data.created;\r\n              msgList.push({'username': usr, 'text': PartMsg});\r\n              this.setState({usrList: usrList});\r\n              this.setState({msgList: msgList});\r\n          }\r\n      )\r\n      stream.addEventListener(\r\n          \"ServerStatus\",\r\n          (event) => {\r\n              //TODO:\r\n              //update the msgList state msg window\r\n              var msgList = this.state.msgList;\r\n              var data = JSON.parse(event.data);\r\n              var StatusMsg = \"ServerStatus\" + data.status + data.created;\r\n              msgList.push({'username': 'server', 'text': StatusMsg});\r\n              this.setState({msgList: msgList});\r\n          }\r\n      )\r\n      stream.addEventListener(\r\n          \"Users\",\r\n          (event) => {\r\n              //TODO:\r\n              //update the online users window\r\n              var usrList = this.state.usrList;\r\n              var data = JSON.parse(event.data);\r\n              console.log(data.users);\r\n              var usrList = JSON.parse(data.users);  //??? can I parse this as JSON???\r\n              this.setState({usrList: usrList});\r\n          }\r\n      )\r\n  }\r\n\r\n\r\n  // need to write functions to connect to the backend\r\n  // use axios\r\n\r\n  // update DUMMY_DATA_msg message list from the server\r\n  // this.setState({\r\n  //   messages: [...this.state.messages, message]\r\n  // })\r\n\r\n  // this.currentUser = currentUser\r\n  sendDialog = async (text) => {\r\n\r\n    var update_msgToken = \"\";\r\n    var form = new FormData();\r\n    form.append(\"message\", text);\r\n    let headers = {\r\n      headers: {\r\n        \"Authorization\": \"Bearer \" + this.state.msgToken,\r\n      }\r\n    }\r\n    const response = await axios.post(url + \"/message\", form, headers);\r\n    if (response.status === 201){\r\n      console.log(response.headers[\"token\"]);\r\n      update_msgToken = response.headers[\"token\"];\r\n      this.setState({\r\n        msgToken: update_msgToken,\r\n      })\r\n    }\r\n    else if (response.status === 409){\r\n      update_msgToken = response.headers[\"token\"];\r\n      this.setState({\r\n        msgToken: update_msgToken,\r\n      })\r\n    }\r\n    else {\r\n      alert(\"Error code: \" + response.status)\r\n    }\r\n    // var request = new XMLHttpRequest();\r\n    // request.open(\"POST\", url + \"/message\");\r\n    // request.setRequestHeader(\r\n    //   \"Authorization\",\r\n    //   \"Bearer \" + this.state.msgToken\r\n    // );\r\n\r\n    \r\n    // request.onreadystatechange = function () {\r\n    //   if (this.readyState != 4) {\r\n    //     return;\r\n    //   }\r\n    //   if (this.status === 201){\r\n    //     var token = request.getResponseHeader(\"token\"); // \"token\" or \"HTTP_token\"???\r\n    //     update_msgToken = token;\r\n    //   }\r\n    //   else {\r\n    //     alert(\"Error: \" + this.status);\r\n    //   }\r\n\r\n    // }\r\n\r\n\r\n    //console.log(\"sendDialog\", text)\r\n  }\r\n\r\n  sendUserPass = async (username, password) => {\r\n    // console.log(\"sendUserPass\", username, password)\r\n    // backend authenticate login\r\n    var update_msgToken = \"\";\r\n    var update_strmToken = \"\";\r\n\r\n    //var request = new XMLHttpRequest();\r\n    var form = new URLSearchParams();\r\n    form.append(\"username\", username);\r\n    form.append(\"password\", password);\r\n    const response = await axios.post(url+'/login', form);\r\n    if (response.status === 201) {\r\n      console.log(response.data)\r\n      update_msgToken = response.data[\"message_token\"];\r\n      update_strmToken = response.data[\"stream_token\"];\r\n    }\r\n    else {\r\n      alert(\"Error code: \" + response.status);\r\n    }\r\n\r\n    this.setState({\r\n      msgToken: update_msgToken,\r\n      strmToken: update_strmToken,\r\n      showChat: true\r\n    });\r\n\r\n    this.start_stream();  //??not sure if there is issue here\r\n    \r\n    // TODO: server url needs to be changed\r\n\r\n    // request.open(\"POST\", url + \"/login\"); // TODO: url -> server backend\r\n    // request.onreadystatechange = function () {\r\n    //     // console.log(this.responseType);\r\n    //     // console.log(this.responseText);\r\n    //     if (this.readyState != 4) {\r\n    //         return;\r\n    //     }\r\n    //     if (this.status === 201) {\r\n    //         const data = JSON.parse(this.responseText);\r\n    //         update_msgToken = data.message_token;\r\n    //         update_strmToken = data.stream_token;\r\n    //     } else if (this.status === 403) {\r\n    //         // username & password not matched\r\n    //         alert(\"password does not match username\");\r\n    //     } else if (this.status === 409) {\r\n    //         // already logged in/stream already open\r\n    //         alert(username.value + \"is already logged in\");\r\n    //     } else if (this.status === 422) {\r\n    //         alert(\"invalid username/password format\");\r\n    //     } else {\r\n    //         alert(\"error, how did you get here??\");\r\n    //     }\r\n        \r\n    // };\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    //TODO: login -> components\r\n    console.log('this.state.msgList:', this.state.msgList);\r\n    console.log('this.state.usrList:', this.state.usrList);\r\n    console.log('this.state.usrList:', this.state.showChat);\r\n\r\n    let display;\r\n    // already logged in\r\n    if (this.state.showChat) {\r\n      display = (\r\n        <div className=\"App\">\r\n          <header className=\"ChatClient-header\">\r\n            <h1>CS291a Chat Client</h1>\r\n          </header>\r\n          <OnlineUserList usrList={this.state.usrList} />\r\n          <MessageList msgList={this.state.msgList} />\r\n          <DialogInput sendDialog={this.sendDialog} />\r\n        </div>\r\n      )\r\n    }\r\n    // login page\r\n    else {\r\n      display = (\r\n        <LoginPage sendUserPass={this.sendUserPass} />\r\n      )\r\n    }\r\n\r\n    return (\r\n        <div>{display}</div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}